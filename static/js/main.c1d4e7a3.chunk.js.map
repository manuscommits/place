{"version":3,"sources":["Components/Place.jsx","App.js","reportWebVitals.js","index.js"],"names":["setup","p5","canvasParentRef","createCanvas","size","parent","noStroke","frameRate","Place","console","log","pixels","react_default","a","createElement","build_default","draw","erase","rect","noErase","clearCanvas","noFill","background","stroke","x","line","y","drawGrid","Object","entries","forEach","_ref","_ref2","slicedToArray","indices","color","_indices$split","split","_indices$split2","xIndex","yIndex","fill","square","yMaxPlace","placePixel","mousePressed","mouseX","mouseY","App","react_router_dom","react_router","exact","path","component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"kQAgBMA,EAAQ,SAACC,EAAIC,GACjBD,EAAGE,aAReC,IACCA,KAOwBC,OAAOH,GAClDD,EAAGK,WACHL,EAAGM,UAhBa,IA2EHC,EAzBD,WACZC,QAAQC,IAAI,gBADM,IAEVC,EAA+B,GAgBvC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQb,MAAOA,EAAOgB,KAjBb,SAACf,IAlCI,SAACA,GACnBA,EAAGgB,QACHhB,EAAGiB,KAAK,EAAG,EAfOd,IACCA,KAenBH,EAAGkB,UAiCDC,CAAYnB,GA9BC,SAACA,GAChBA,EAAGoB,SACHpB,EAAGqB,WAAW,KACdrB,EAAGiB,KAAK,EAAG,EAtBOd,IACCA,KAsBnBH,EAAGsB,OApBa,KAqBhB,IAAK,IAAIC,EAAI,EAAGA,GA3BA,MA2BkBA,EAC5BA,EAAI,IAAM,GAAGvB,EAAGsB,OArBL,IAsBXC,EAAI,KAAO,GAAGvB,EAAGsB,OArBN,GAsBftB,EAAGwB,KA/BM,GA+BMD,EAAG,EA/BT,GA+BmBA,EA1BXpB,KA2BjBH,EAAGsB,OAzBW,KA2BhB,IAAK,IAAIG,EAAI,EAAGA,GAhCA,MAgCkBA,EAC5BA,EAAI,IAAM,GAAGzB,EAAGsB,OA3BL,IA4BXG,EAAI,KAAO,GAAGzB,EAAGsB,OA3BN,GA4BftB,EAAGwB,KAAK,EArCC,GAqCSC,EAjCFtB,IAJP,GAqCgCsB,GACzCzB,EAAGsB,OA/BW,KAiChBtB,EAAGK,WAcWqB,CAAS1B,GAErB2B,OAAOC,QAAQlB,GAAQmB,QAAQ,SAAAC,GAAsB,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAApBG,EAAoBF,EAAA,GAAXG,EAAWH,EAAA,GAAAI,EAC1BF,EAAQG,MAAM,KADYC,EAAAV,OAAAK,EAAA,EAAAL,CAAAQ,EAAA,GAC5CG,EAD4CD,EAAA,GACpCE,EADoCF,EAAA,IAbtC,SAACrC,EAAIsC,EAAQC,EAAQL,GACtClC,EAAGwC,KAAKN,GACRlC,EAAGyC,OA7CQ,GA6CMH,EA7CN,IA6CsBI,GAAgBH,GA7CtC,IA0DPI,CAAW3C,EAAIsC,EAAQC,EAAQL,MAUGU,aANjB,SAAC5C,GACpBQ,QAAQC,IAAI,SAAUT,EAAG6C,OAAQ7C,EAAG8C,aCjDzBC,EAdH,WAGV,OAFAvC,QAAQC,IAAI,cAGVE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,QCA5B8C,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA5B,GAAiD,IAA9C8B,EAA8C9B,EAA9C8B,OAAQC,EAAsC/B,EAAtC+B,OAAQC,EAA8BhC,EAA9BgC,OAAQC,EAAsBjC,EAAtBiC,OAAQC,EAAclC,EAAdkC,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,OCDdW,IAASC,OACPvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMuD,WAAP,KACExD,EAAAC,EAAAC,cAACuD,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.c1d4e7a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nconst frameRate = 1;\r\n\r\nconst size = 10;\r\nconst xMaxPlace = 100;\r\nconst yMaxPlace = 100;\r\n\r\nconst canvasWidth = size * xMaxPlace;\r\nconst canvasHeight = size * yMaxPlace;\r\n\r\nconst lightLine = 100;\r\nconst mediumLine = 50;\r\nconst strongLine = 0;\r\n\r\nconst setup = (p5, canvasParentRef) => {\r\n  p5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\r\n  p5.noStroke();\r\n  p5.frameRate(frameRate);\r\n};\r\n\r\nconst clearCanvas = (p5) => {\r\n  p5.erase();\r\n  p5.rect(0, 0, canvasWidth, canvasHeight);\r\n  p5.noErase();\r\n};\r\n\r\nconst drawGrid = (p5) => {\r\n  p5.noFill();\r\n  p5.background(255);\r\n  p5.rect(0, 0, canvasWidth, canvasHeight);\r\n  p5.stroke(lightLine);\r\n  for (var x = 0; x <= xMaxPlace; ++x) {\r\n    if (x % 5 === 0) p5.stroke(mediumLine);\r\n    if (x % 10 === 0) p5.stroke(strongLine);\r\n    p5.line(size * x, 0, size * x, canvasHeight);\r\n    p5.stroke(lightLine);\r\n  }\r\n  for (var y = 0; y <= yMaxPlace; ++y) {\r\n    if (y % 5 === 0) p5.stroke(mediumLine);\r\n    if (y % 10 === 0) p5.stroke(strongLine);\r\n    p5.line(0, size * y, canvasWidth, size * y);\r\n    p5.stroke(lightLine);\r\n  }\r\n  p5.noStroke();\r\n};\r\n\r\nconst placePixel = (p5, xIndex, yIndex, color) => {\r\n  p5.fill(color);\r\n  p5.square(size * xIndex, size * (yMaxPlace - 1 - yIndex), size);\r\n};\r\n\r\nconst Place = () => {\r\n  console.log(\"RENDER PLACE\");\r\n  const { pixels, showGrid } = { pixels: [], showGrid: true };\r\n  const draw = (p5) => {\r\n    // NOTE: Do not use setState in the draw function or in functions that are executed\r\n    clearCanvas(p5);\r\n    showGrid && drawGrid(p5);\r\n\r\n    Object.entries(pixels).forEach(([indices, color]) => {\r\n      const [xIndex, yIndex] = indices.split(\",\");\r\n      placePixel(p5, xIndex, yIndex, color);\r\n    });\r\n  };\r\n\r\n  const mousePressed = (p5) => {\r\n    console.log(\"coords\", p5.mouseX, p5.mouseY);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Sketch setup={setup} draw={draw} mousePressed={mousePressed} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Place;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Place from \"./Components/Place\";\n\nconst App = () => {\n  console.log(\"APP RENDER\");\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Place} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}